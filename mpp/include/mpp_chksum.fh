! -*-f90-*-

!***********************************************************************
!*                             Apache License 2.0
!*
!* This file is part of the GFDL Flexible Modeling System (FMS).
!*
!* Licensed under the Apache License, Version 2.0 (the "License");
!* you may not use this file except in compliance with the License.
!* You may obtain a copy of the License at
!*
!*     http://www.apache.org/licenses/LICENSE-2.0
!*
!* FMS is distributed in the hope that it will be useful, but WITHOUT
!* WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied;
!* without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
!* PARTICULAR PURPOSE. See the License for the specific language
!* governing permissions and limitations under the License.
!***********************************************************************

!> @file
!> @addtogroup mpp
!> @brief Wrapper routine for @ref mpp_chksum interface

!> Wrapper routine for @ref mpp_chksum interface
!!
!> @returns i8_kind checksum of var, which will actually be int if no_8byte_integers is defined
function MPP_CHKSUM_( var, pelist , mask_val)
  integer(i8_kind) :: MPP_CHKSUM_
  integer(MPP_TRANSFER_KIND_) :: mold(1) !< Mold is a dummy array to be used by TRANSFER(),
                                         !! must be same TYPE as result
  MPP_TYPE_, intent(in) :: var MPP_RANK_
  integer, intent(in), optional :: pelist(:)
  MPP_TYPE_, intent(in),optional :: mask_val !< optional mask_val is masked away in checksum_int.h
                                             !! function via PACK()

  if ( PRESENT(mask_val) ) then
     MPP_CHKSUM_ = mpp_chksum( TRANSFER(var,mold), pelist, &
          mask_val= TRANSFER(mask_val,mold(1) ) )
  else
      MPP_CHKSUM_ = mpp_chksum( TRANSFER(var,mold), pelist )
  end if

  return
end function MPP_CHKSUM_
