on: pull_request

# cancel running jobs if theres a newer push
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  intel-autotools:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        io-flag: ["--disable-deprecated-io", "--enable-deprecated-io"]
    container:
      image: intel/oneapi-hpckit:2023.1.0-devel-ubuntu20.04
      env:
        CC: mpiicc
        FC: mpiifort
        CFLAGS:  "-I/libs/include"
        FCFLAGS: "-I/libs/include -g -traceback"
        LDFLAGS: "-L/libs/lib"
        TEST_VERBOSE: 1
        I_MPI_FABRICS: "shm" # needed for mpi in image
        # intel bug causes some failures with shm option(required in container)
        SKIP_TESTS: "test_mpp_update_domains.1 test_update_domains_performance.1 test_diag_manager2.23"
    steps:
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: /libs
        key: ${{ runner.os }}-intel-libs
    - name: Install packages for building
      run: apt-get update && apt-get install -y autoconf libtool automake zlibc zlib1g-dev
    - if: steps.cache.outputs.cache-hit != 'true'
      name: Build netcdf
      run: |
        mkdir /libs
        wget https://hdf-wordpress-1.s3.amazonaws.com/wp-content/uploads/manual/HDF5/HDF5_1_12_2/source/hdf5-1.12.2.tar.gz
        tar xf hdf5-1.12.2.tar.gz && cd hdf5-1.12.2
        ./configure --prefix=/libs
        make -j install && cd ..
        wget https://github.com/Unidata/netcdf-c/archive/refs/tags/v4.8.1.tar.gz
        tar xf v4.8.1.tar.gz && cd netcdf-c-4.8.1
        ./configure --prefix=/libs --enable-remote-fortran-bootstrap
        make -j install
        # sets this here to pass embeded configure checks
        export LD_LIBRARY_PATH="/libs/lib:$LD_LIBRARY_PATH"
        make -j -k build-netcdf-fortran
        make -j install-netcdf-fortran
        wget https://github.com/yaml/libyaml/releases/download/0.2.5/yaml-0.2.5.tar.gz
        tar xf yaml-0.2.5.tar.gz && cd yaml-0.2.5
        ./configure --prefix=/libs
        make -j install && cd
    - name: checkout
      uses: actions/checkout@v4
    - name: Configure
      run: |
        autoreconf -if ./configure.ac
        export LD_LIBRARY_PATH="/libs/lib:$LD_LIBRARY_PATH"
        ./configure --with-yaml ${{ matrix.io-flag }}
    - name: Compile
      run: make -j || make
    - name: Run test suite
      run: make check LD_LIBRARY_PATH="/libs/lib:$LD_LIBRARY_PATH" TEST_VERBOSE=1
